fs = require 'fs'
{resolve} = 'path'
{print} = require 'util'
{spawn, exec} = require 'child_process'

buildCoffee = (watch, callback) ->
  if typeof watch is 'function'
    callback = watch
    watch = false
  options = ['-c', '-o', 'lib', 'src']
  options.unshift '-w' if watch

  coffee = spawn 'coffee', options
  coffee.stdout.on 'data', (data) -> print data.toString()
  coffee.stderr.on 'data', (data) -> print data.toString()
  coffee.on 'exit', (status) -> callback?() if status is 0

buildLess = (callback) ->
  options = ['src/public/less/bootstrap.less', 'lib/public/css/site.css']
  less = spawn 'lessc', options
  less.stdout.on 'data', (data) -> print data.toString()
  less.stderr.on 'data', (data) -> print data.toString()
  less.on 'exit', (status) -> callback?() if status is 0

task 'docs', 'Generate annotated source code with Docco', ->
  fs.readdir 'src', (err, contents) ->
    files = ("src/#{file}" for file in contents when /\.coffee$/.test file)
    docco = spawn 'docco', files
    docco.stdout.on 'data', (data) -> print data.toString()
    docco.stderr.on 'data', (data) -> print data.toString()
    docco.on 'exit', (status) -> callback?() if status is 0

task 'build', 'Compile CoffeeScript source files', ->
  buildCoffee()
  buildLess()

task 'watch', 'Recompile CoffeeScript source files when modified', ->
  buildCoffee true
  buildLess() #have not added watch support for LESS files.
